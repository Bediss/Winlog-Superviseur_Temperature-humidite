Global String Number;
Global String Formule_User_Complet;
Global String Formule_Parse_Complet;
Global String Formule_Simple_Complet;
Global int MaxLengthFormule=370;


///////////////////////////////////////////////////////////////////////////////
function string Fetch_Formule(string Ligne, int Col, string Seperator)

    String txt = Ligne;
    String CODE = "*";
    int i;  int P;

    for i =1  to Col do
             P = StrPos(txt,Seperator);
             CODE=StrSubString(txt,1,P-1);
             txt=StrDelete(txt,1,P);
                end
      return CODE;
end
///////////////////////////////////////////////////
Function void ClickNumber_1()
    //MessageBox(Formule_Parse_Complet,Formule_Simple_Complet);

    SetStrGateValue("AlarmeEventModifer",18,"1");

    Number=Number+GetStrGateValue("AlarmeEventModifer",18);

    SetStrGateValue("Operande_Formule",0,Number);
End
Function void ClickNumber_2()


SetStrGateValue("AlarmeEventModifer",18,"2");
Number=Number+GetStrGateValue("AlarmeEventModifer",18);
SetStrGateValue("Operande_Formule",0,Number);
End
Function void ClickNumber_3()


SetStrGateValue("AlarmeEventModifer",18,"3");
Number=Number+GetStrGateValue("AlarmeEventModifer",18);
SetStrGateValue("Operande_Formule",0,Number);
End
Function void ClickNumber_4()


SetStrGateValue("AlarmeEventModifer",18,"4");
Number=Number+GetStrGateValue("AlarmeEventModifer",18);
SetStrGateValue("Operande_Formule",0,Number);
End
Function void ClickNumber_5()


SetStrGateValue("AlarmeEventModifer",18,"5");
Number=Number+GetStrGateValue("AlarmeEventModifer",18);
SetStrGateValue("Operande_Formule",0,Number);
End

Function void ClickNumber_6()


SetStrGateValue("AlarmeEventModifer",18,"6");
Number=Number+GetStrGateValue("AlarmeEventModifer",18);
SetStrGateValue("Operande_Formule",0,Number);
End

Function void ClickNumber_7()

SetStrGateValue("AlarmeEventModifer",18,"7");
Number=Number+GetStrGateValue("AlarmeEventModifer",18);
SetStrGateValue("Operande_Formule",0,Number);
End


Function void ClickNumber_8()

SetStrGateValue("AlarmeEventModifer",18,"8");
Number=Number+GetStrGateValue("AlarmeEventModifer",18);
SetStrGateValue("Operande_Formule",0,Number);
End

Function void ClickNumber_9()

SetStrGateValue("AlarmeEventModifer",18,"9");
Number=Number+GetStrGateValue("AlarmeEventModifer",18);
SetStrGateValue("Operande_Formule",0,Number);
End

Function void ClickNumber_0()

SetStrGateValue("AlarmeEventModifer",18,"0");
Number=Number+GetStrGateValue("AlarmeEventModifer",18);
SetStrGateValue("Operande_Formule",0,Number);
End

Function void ClickNumber_OP_Moin()
int S;
S=Occurence_operateur( Number, "-");
if S<1 then

SetStrGateValue("AlarmeEventModifer",18,"-");
Number=Number+GetStrGateValue("AlarmeEventModifer",18);
SetStrGateValue("Operande_Formule",0,Number);
end
End

Function void ClickNumber_vergul()

//// verifie //////////////////// verifie //////////////////// verifie ////////////////
SetStrGateValue("AlarmeEventModifer",18,".");
Number=Number+GetStrGateValue("AlarmeEventModifer",18);
SetStrGateValue("Operande_Formule",0,Number);
End



Function void ClickOperator_demicirD()
String op;
SetStrGateValue("Operateur_Formule",0,")");
End

Function void ClickOperator_demicirG()

SetStrGateValue("Operateur_Formule",0,"(");
End


Function void ClickOperator_Div()

SetStrGateValue("Operateur_Formule",0,"/");
End

Function void ClickOperator_Mod()

SetStrGateValue("Operateur_Formule",0,"Mod(");
End

Function void ClickOperator_Sin()

SetStrGateValue("Operateur_Formule",0,"Sin(");
End

Function void ClickOperator_Exp()

SetStrGateValue("Operateur_Formule",0,"Exp(");
End

Function void ClickOperator_Sqrt()

SetStrGateValue("Operateur_Formule",0,"Sqrt(");
End

Function void ClickOperator_Tan()

SetStrGateValue("Operateur_Formule",0,"Tan(");
End

Function void ClickOperator_Log()

SetStrGateValue("Operateur_Formule",0,"Log(");
End

Function void ClickOperator_ArcCos()

SetStrGateValue("Operateur_Formule",0,"ArcCos(");
End

Function void ClickOperator_ArcSin()

SetStrGateValue("Operateur_Formule",0,"ArcSin(");
End

Function void ClickOperator_ArcTan()

SetStrGateValue("Operateur_Formule",0,"ArcTan(");
End

Function void ClickOperator_plus()

SetStrGateValue("Operateur_Formule",0,"+");
End

Function void ClickOperator_mult()

SetStrGateValue("Operateur_Formule",0,"*");
End


Function void ClickOperator_Soustraction()

SetStrGateValue("Operateur_Formule",0,"-");
End

Function void ClickOperator_cos()

SetStrGateValue("Operateur_Formule",0,"Cos(");
End

Function void Vider_operande()
Number="";
SetStrGateValue("Operande_Formule",0,Number);
End

Function Void Vider_Operateur()

SetStrGateValue("Operateur_Formule",0,"");
End

/////////////////////////////
Function Void Verif_operande()
String op;
int c=0;
int i;
int max;
    SetStrGateValue("AlarmeEventModifer",17,"");

    op=GetStrGateValue("Operande_Formule",0);


    if (op=="")then
     SetStrGateValue("AlarmeEventModifer",17,"S'il vous plait sélectionner Un Operande");
     return;
    end

    max=strlen(op);
    for i =1 to max do

        if( StrSubString(op,i,1)==".")then

            c=c+1;

        end

    end
if ((c>1 )|| (StrSubString(op,strlen(op),1)==".") || (StrSubString(op,1,1)==".") || (op==".")) then

    SetStrGateValue("AlarmeEventModifer",17,"S'il vous plait Corriger l'operande");

    return;


end


Insert_F_Item("#"+op+"~","#"+op+"~");
SetStrGateValue("Operande_Formule",0,"");

End

///////////////
function void Verif_operateur()
    String op;
     int ResteForm;
     SetStrGateValue("AlarmeEventModifer",17,"");
        if (GetStrGateValue("Operateur_Formule",0)=="")then
    SetStrGateValue("AlarmeEventModifer",17,"S'il vous plait sélectionner Un Operateur!");
   else

  Insert_F_Item(GetStrGateValue("Operateur_Formule",0)+"~",GetStrGateValue("Operateur_Formule",0)+"~");

    end


End
/////////////////////////////

Function Void Select_Formule_FilsCompteur()

       String CompteurCode;
       String CompteurName;
    String Ligne;
    Ligne = Select_BU();
    CompteurCode=Fetch_Email(Ligne,8,";");
    CompteurName=Fetch_Email(Ligne,9,";");
    SetStrGateValue("AlarmeEventModifer",17,"");
    IF ( GetStrGateValue("BU_Selected",0) ==  "" )then
    SetStrGateValue("AlarmeEventModifer",17,"S'il vous plait sélectionner Un Compteur!"); return;     End


    Insert_F_Item("F~(~"+CompteurName+"~)~","F~(~"+CompteurCode+"~)~");




End

Function Void Select_Formule_Compteur()

    String Compteur;

    String CodeCompteur;
    Int FileHandle;
    Bool Exit = false;
    String ReadLigne;
    String Ligne;
    String Parent;
    String CompteurCode;
    String  CompteurName;

    SetStrGateValue("AlarmeEventModifer",17,"");


    IF ( GetStrGateValue("BU_Selected",0) ==  "" )then
    SetStrGateValue("AlarmeEventModifer",17,"S'il vous plait sélectionner Un Compteur!"); return;     End

    Ligne = Select_BU();
    CompteurCode=Fetch_Email(Ligne,8,";");
    CompteurName=Fetch_Email(Ligne,9,";");

      Insert_F_Item(CompteurName+"~",CompteurCode+"~");



end




Function Void Display_Formule()
int L=76;
int S0=1;
int S1=77;
int S2=153;
int S3=229;
int S4=305;
int S5=381;
String TempUserFormule;
TempUserFormule=Formule_User_Complet;


ZapTild_Display();
 SetStrGateValue("Display_Formule",0,StrSubString(Formule_User_Complet,S0,L));

  SetStrGateValue("Display_Formule",1,StrSubString(Formule_User_Complet,S1,L));
   SetStrGateValue("Display_Formule",2,StrSubString(Formule_User_Complet,S2,L));
    SetStrGateValue("Display_Formule",3,StrSubString(Formule_User_Complet,S3,L));
     SetStrGateValue("Display_Formule",4,StrSubString(Formule_User_Complet,S4,L));
      SetStrGateValue("Display_Formule",5,StrSubString(Formule_User_Complet,S5,L));
        Formule_User_Complet=TempUserFormule;

End


Function int Occurence_operateur(String STR,String op)

int compteur = 0;
int i;
int L;

L=strlen(STR);

for i =1 to L do
if( StrSubString(STR,i,1)==op)then
    compteur=compteur+1;
end
end

return compteur;
end



//////
Function Void Clean_Formule()

SetStrGateValue("AlarmeEventModifer",17,"");

Formule_User_Complet="";
Formule_Parse_Complet="";
     SetNumGateValue("CurrentPosition",2,0);
     SetNumGateValue("CurrentPosition",1,1);
     SetNumGateValue("CurrentPosition",0,1);

Display_Formule();

End

////////////////////////////////////////
/////////////////////////////////////////
function int Fetch_Position(string Item, int Col,String op)

string txt = Item;
String CODE = "";
int i;  int P;
int count =0;
                for i =1  to Col do
                    P = StrPos(txt,op);
                    count=count+P;

                    txt=StrDelete(txt,1,P);
                end
        return count;
end

////////////////////////////////////
Function Void RightPostion()
int i;
int P1;
int P2;
int NbOccUser;
int NbOccParse;
i=GetNumGateValue("CurrentPosition",2);

    SetStrGateValue("AlarmeEventModifer",17,"");

    NbOccUser=Occurence_operateur(Formule_User_Complet,"~");
    NbOccParse=Occurence_operateur(Formule_Parse_Complet,"~");

	if NbOccUser !=0 then
   if (i>NbOccUser) then  SetStrGateValue("AlarmeEventModifer",17,"You are at the end !"); return; end
   if (i==NbOccUser)then
     i=i+1;
     P1=StrLen(Formule_Parse_Complet);
     P2=StrLen(Formule_User_Complet);

   else
   if (i<NbOccUser)then
        i=i+1;

        P1=Fetch_Position(Formule_Parse_Complet,i,"~");

        P2=Fetch_Position(Formule_User_Complet,i,"~");


    end
    end

    SetNumGateValue("CurrentPosition",0,P2);
    SetNumGateValue("CurrentPosition",1,P1);
    SetNumGateValue("CurrentPosition",2,i);
    PlacePostion();
end





End


//////////////////////////////////////////////////////////////////////////

Function Void LeftPostion()
int i;
int P1;
int P2;
int NbOccUser;
int NbOccParse;
i=GetNumGateValue("CurrentPosition",2);
    SetStrGateValue("AlarmeEventModifer",17,"");

    NbOccUser=Occurence_operateur(Formule_User_Complet,"~");
    NbOccParse=Occurence_operateur(Formule_Parse_Complet,"~");
	if NbOccUser !=0 then
    if (i==0) then  SetStrGateValue("AlarmeEventModifer",17,"You are at the Start!"); return; end

   if (i==1)then
     i=i-1;
     P1=1;
     P2=1;
    else
   if (i>1)then
        i=i-1;

        P1=Fetch_Position(Formule_Parse_Complet,i,"~");

        P2=Fetch_Position(Formule_User_Complet,i,"~");



        end
    end
        SetNumGateValue("CurrentPosition",2,i);
       SetNumGateValue("CurrentPosition",1,P1);
       SetNumGateValue("CurrentPosition",0,P2);
       PlacePostion();
end
End


Function Void FirstPosition()
int i=0;
int P1=1;
int P2=1;
    SetStrGateValue("AlarmeEventModifer",17,"");
    SetNumGateValue("CurrentPosition",2,i);

        SetNumGateValue("CurrentPosition",1,P1);
        SetNumGateValue("CurrentPosition",0,P2);

        PlacePostion();

End

Function Void LastPosition()

int i;
int P1;
int P2;

P1=StrLen(Formule_Parse_Complet);
P2=StrLen(Formule_User_Complet);

	if P2 !=0 then
		i=Occurence_operateur(Formule_User_Complet,"~")+1;
		SetNumGateValue("CurrentPosition",2,i);

        SetNumGateValue("CurrentPosition",1,P1);
        SetNumGateValue("CurrentPosition",0,P2);

        PlacePostion();
	end
End

//////////////////////////
Function Void PlacePostionDisplay(String Formule_User,String NomALRPageView)
    String Part_1_User="";
    String Part_2_User="";
    int nT;

    int Length;
    int Cp;

    nT=Occurence_operateur(Formule_User,"~");
   //nT = GetNumGateValue("CurrentPosition",2);

    if(nT<1)then
       // Formule_User_Complet="|"+Formule_User_Complet;
       // Display_Formule();
              SetStrGateValue(NomALRPageView,2,Formule_User);
        //Formule_User_Complet=StrSubString(Formule_User_Complet,2,StrLen(Formule_User_Complet));
    else
        if nT==1 then
         Cp=Fetch_Position(Formule_User,nT,"~");


        Length=StrLen(Formule_User)-Cp;

        Part_1_User=StrSubString(Formule_User,1,Cp-1);

        Part_2_User=StrSubString(Formule_User,Cp,Length+1);
        Formule_User=Part_1_User;
           //SetStrGateValue(NomALRPageView,2,Formule_User);
          // MessageBox(Formule_User,"");
          end
         // if nT>1 then
          while (nT>1 )

             Cp=Fetch_Position(Formule_User,nT,"~");

        Length=StrLen(Formule_User)-Cp;
                Part_1_User=StrSubString(Formule_User,1,Cp-2);
                   Part_2_User=StrSubString(Formule_User,Cp,Length+1);
                       Formule_User=Part_1_User+Part_2_User;


          //Formule_User=Part_1_User+Part_2_User;
           nT=nT-1;
           end
             SetStrGateValue(NomALRPageView,2,Formule_User);

   end
 End







//////////////////////////
Function Void PlacePostion()
    String Part_1_User="";
    String Part_2_User="";
    int nT;
    int Length;

   nT = GetNumGateValue("CurrentPosition",2);

    if(nT<1)then
        Formule_User_Complet="|"+Formule_User_Complet;
        Display_Formule();
        Formule_User_Complet=StrSubString(Formule_User_Complet,2,StrLen(Formule_User_Complet));
    else
        Length=StrLen(Formule_User_Complet)-GetNumGateValue("CurrentPosition",0);

        Part_1_User=StrSubString(Formule_User_Complet,1,GetNumGateValue("CurrentPosition",0)-1);

        Part_2_User=StrSubString(Formule_User_Complet,GetNumGateValue("CurrentPosition",0),Length+1);
        Formule_User_Complet=Part_1_User+"|"+Part_2_User;
          Display_Formule();
          Formule_User_Complet=Part_1_User+Part_2_User;
   end
 End



////////////////////Delete////////////////////////////////////////

Function void Delete_F_Item()
int i;
int P1;
int P2;
int SP1;
int SP2;
int Si;
int Length;
int MaxT;

String Part_1_User;
String Part_2_User;
String Part_1_Parse;
String Part_2_Parse;
    SetStrGateValue("AlarmeEventModifer",17,"");
    i=GetNumGateValue("CurrentPosition",2);


    if i<=1 then
        i=0;
        MaxT=Occurence_operateur(Formule_User_Complet,"~");
        if MaxT<=1 then
            Formule_User_Complet="";
            Formule_Parse_Complet="";
               PlacePostion();
        else
            SP1=Fetch_Position(Formule_User_Complet,1,"~");

            Formule_User_Complet=StrDelete(Formule_User_Complet,1,SP1);

            SP1=Fetch_Position(Formule_Parse_Complet,1,"~");
            Formule_Parse_Complet=StrDelete(Formule_Parse_Complet,1,SP1);
               PlacePostion();

        end

        SetNumGateValue("CurrentPosition",2,0);
        SetNumGateValue("CurrentPosition",1,0);
        SetNumGateValue("CurrentPosition",0,0);


   else

        i=i-1;




     P1=GetNumGateValue("CurrentPosition",0);
     P2=GetNumGateValue("CurrentPosition",1);


    SP1=Fetch_Position(Formule_User_Complet,i,"~");
    if SP1<=0 then SP1=1; end
    SP2=Fetch_Position(Formule_Parse_Complet,i,"~");
    if SP2<=0 then SP2=1; end



////////////////////////////User Parties//////////////////////////

        Part_1_User=StrSubString(Formule_User_Complet,1,SP1);
    Length=StrLen(Formule_User_Complet)-P1+1;
    Part_2_User=StrSubString(Formule_User_Complet,P1+1,Length);
    Formule_User_Complet=Part_1_User+Part_2_User;
    SetNumGateValue("CurrentPosition",0,Fetch_Position(Formule_User_Complet,i,"~"));
    SetNumGateValue("CurrentPosition",2,i);
       PlacePostion();

    //////////////////////////Parse Parties///////

        Part_1_Parse=StrSubString(Formule_Parse_Complet,1,SP2);
    Length=StrLen(Formule_Parse_Complet)-P2+1;
    Part_2_Parse=StrSubString(Formule_Parse_Complet,P2+1,Length);
    Formule_Parse_Complet=Part_1_Parse+Part_2_Parse;
    SetNumGateValue("CurrentPosition",1,Fetch_Position(Formule_Parse_Complet,i,"~"));

end
End

////////////////////Inserer/////////////////////////////////////

Function Void Insert_F_Item(String InsertPartUser,String InsertPartParse)
int i;
int P1;
int P2;
int II;
int Si;
int Length;
int LM;
int LMI;
int LMT;

String Part_1_User;
String Part_2_User;
String Part_1_Parse;
String Part_2_Parse;

    SetStrGateValue("AlarmeEventModifer",17,"");


i=GetNumGateValue("CurrentPosition",2);



P1=GetNumGateValue("CurrentPosition",0);
P2=GetNumGateValue("CurrentPosition",1);


II=Occurence_operateur(InsertPartUser,"~");
i=i+II;
SetNumGateValue("CurrentPosition",2,i);//increment number of tild


   LM=StrLen(Formule_User_Complet);

   LMI=StrLen(InsertPartUser);
   LMT = LM + LMI;

 if (LMT>MaxLengthFormule) then
 SetStrGateValue("AlarmeEventModifer",17,"Formule is too long: No more parts can be added");
 return;
 end

////////////////////////////User Parties//////////////////////////
 Length=StrLen(Formule_User_Complet)-P1+1;
    if P1==1 then
            Part_1_User="";
            Part_2_User=StrSubString(Formule_User_Complet,P1,Length);

        else
            Part_1_User=StrSubString(Formule_User_Complet,1,P1);
             Part_2_User=StrSubString(Formule_User_Complet,P1+1,Length);
     end


    Formule_User_Complet=Part_1_User+InsertPartUser+Part_2_User;




    SetNumGateValue("CurrentPosition",0,Fetch_Position(Formule_User_Complet,i,"~"));



          PlacePostion();


    //////////////////////////Parse Parties///////
    Length=StrLen(Formule_Parse_Complet)-P2+1;
        if P2==1 then
            Part_1_Parse="";
            Part_2_Parse=StrSubString(Formule_Parse_Complet,P1,Length);
        else

            Part_1_Parse=StrSubString(Formule_Parse_Complet,1,P2);
            Part_2_Parse=StrSubString(Formule_Parse_Complet,P2+1,Length);
        end


          Formule_Parse_Complet=Part_1_Parse+InsertPartParse+Part_2_Parse;
          SetNumGateValue("CurrentPosition",1,Fetch_Position(Formule_Parse_Complet,i,"~"));


           //SetStrGateValue("AlarmeEventModifer",17,Formule_Parse_Complet);





End


///////////////////////////Save Formule//////////////////////////////////


Function Void SaveFormule()
    String TempLigne;
    int OriginalError;
    int TempError;
    int ec;
    SetStrGateValue("AlarmeEventModifer",17,"");

    String LOGFullPathFileName = ENV_PATH+"\BuildLOG.txt";
    Int LOGFileHandle = FileOpen(LOGFullPathFileName,"at");

    TempLigne=Admin_View_CurrentLine;
    ZapTild_F_Simple();

    TempLigne=FR_Formule(TempLigne,Formule_Simple_Complet,13);
    TempLigne=FR_Formule(TempLigne,Formule_Parse_Complet,20);
    TempLigne=FR_Formule(TempLigne,Formule_User_Complet,21);


    TempLigne=Parse_Formule_Compteur(  TempLigne , LOGFileHandle );


    OriginalError=StrToInt(Fetch_Formule(Admin_View_CurrentLine,24,";"));
    TempError=StrToInt(Fetch_Formule(TempLigne,24,";"));

       FileClose(LOGFileHandle);
    if (TempError<=OriginalError) then
        SetStrGateValue("AlarmeEventModifer",17,"Formule Save is successful");
        Admin_View_CurrentLine=TempLigne;
          SetStrGateValue("AlarmeEventModifer",7,Formule_User_Complet);
            SetStrGateValue("AlarmeEventModifer",10,TempError);
        TPageCloseByName("POPUP_AllCompteur_Formule");

     else
       ec =TempError-OriginalError;

        SetStrGateValue("AlarmeEventModifer",17,"You Have "+ec+" Error(s)");
    end




End
/////////////////////////////////////////////////////////////////////////////////////////
Function String ZapTild_Display_All(String Formule)
    String TSimple="";

    int MaxT;
    int MaxD;
    String blob="";
    String TTSimple="";
    String Simple;
     int i;

    MaxT=Occurence_operateur(Formule,"~");
    MaxD=Occurence_operateur(Formule,"#")+1;


    if MaxT<1 then
       TSimple = Formule;

        else
            For i=1 to MaxT do
                blob=FetchBlob(Formule,i,"~");
                TSimple=TSimple+" "+blob;

            end
        Formule=TSimple;
    end

    if MaxD<1 then
        Formule =TSimple;

    Else

        For i=1 to MaxD do
            blob=FetchBlob(TSimple,i,"#");
            TTSimple=TTSimple+blob;

        end
        Formule=TTSimple;
         end
    return Formule;


End
///////////////////////////////////////////////////////////////////
Function void ZapTild_Display()
    String TSimple="";

    int MaxT;
    int MaxD;
    String blob="";
    String TTSimple="";
    String Simple;
     int i;

    MaxT=Occurence_operateur(Formule_User_Complet,"~");
    MaxD=Occurence_operateur(Formule_User_Complet,"#")+1;


    if MaxT<1 then
       TSimple = Formule_User_Complet;

        else
            For i=1 to MaxT do
                blob=FetchBlob(Formule_User_Complet,i,"~");
                TSimple=TSimple+" "+blob;

            end
        Formule_User_Complet=TSimple;
    end

    if MaxD<1 then
        Formule_User_Complet =TSimple;

    Else

        For i=1 to MaxD do
            blob=FetchBlob(TSimple,i,"#");
            TTSimple=TTSimple+blob;

        end
    Formule_User_Complet=TTSimple;
    end

End
////////////////////////////

Function void ZapTild_F_Simple()
    String TSimple="";

    int MaxT;
    int MaxD;
    String blob="";
    String TTSimple="";
     int i;

    MaxT=Occurence_operateur(Formule_Parse_Complet,"~");
    MaxD=Occurence_operateur(Formule_Parse_Complet,"#")+1;

    if MaxT<1 then
       Formule_Simple_Complet = Formule_Parse_Complet  ;
       TSimple = Formule_Parse_Complet;
        else
            For i=1 to MaxT do
                blob=FetchBlob(Formule_Parse_Complet,i,"~");
                TSimple=TSimple+blob;
            end
        Formule_Simple_Complet=TSimple;
    end

    if MaxD<1 then
        Formule_Parse_Complet =TSimple;

    Else

        For i=1 to MaxD do
            blob=FetchBlob(TSimple,i,"#");
            TTSimple=TTSimple+blob;

        end

        Formule_Simple_Complet=TTSimple;
    end

End

Function String FetchBlob(String Ligne,int Col,String op)
    String txt = Ligne;
    String CODE = "*";
    int i;  int P;

    for i =1  to Col do
             P = StrPos(txt,op);
             CODE=StrSubString(txt,1,P-1);
             txt=StrDelete(txt,1,P);
                end
      return CODE;
end

function String FR_Formule(String Ligne,string Replace , Int NumFild)

string txt = Ligne;
String NewLigne ="";
String CODE = "";
int i;  int P = 0;



      for i =1  to NumFild-1 do
        P = StrPos(txt,";");
        CODE=StrSubString(txt,1,P);
        NewLigne = NewLigne + CODE ;
        txt=StrDelete(txt,1,P);
      end

        P = StrPos(txt,";");
        CODE=StrSubString(txt,1,P-1);
        txt=StrDelete(txt,1,P-1);


       P = StrPos(CODE,"_");

        Return NewLigne + Replace + txt;

end




